#!/bin/bash

# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: service –∏–ª–∏ line_counter
mode=""
service=""
target=""
recursive=false
detail=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case "$1" in
        --service)
            mode="service"
            servcie="$2"
            shift 2
            ;;
        --count-lines)
            mode="line_counter"
            target="$2"
            shift 2
            ;;
        -r)
            recursive=true
            shift
            ;;
        --detail)
            detail=true
            shift
            ;;
        *)
            echo "Unknown argument: $1"
            exit 1
            ;;
    esac
done

### –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ ###
if [ "$mode" = "service" ]; then
    if [ -z "$service" ]; then
        echo "Usage: $0 --service <service_name>"
        exit 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
    if systemctl is-active --quiet "$service"; then
        echo "Service $service is running."
    else
        echo "Service $service is not running. Attempting to restart..."
        sudo systemctl restart "$service"
        
        if systemctl is-active --quiet "$service"; then
            echo "Service $service successfully restarted."
        else
            echo "Failed to restart $service."
            exit 1
        fi
    fi

### –†–µ–∂–∏–º –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ç—Ä–æ–∫ ###
elif [ "$mode" = "line_counter" ]; then
    if [ -z "$target" ]; then
        echo "Usage: $0 --count-lines <file_or_directory> [-r] [--detail]"
        exit 1
    fi

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ç—Ä–æ–∫
    count_lines() {
        local file="$1"
        local lines=$(wc -l < "$file" 2>/dev/null)
        if [ "$?" -ne 0 ]; then
            echo "Error reading file: $file" >&2
            return 1
        fi
        echo "$lines"
    }

    # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    process_directory() {
        local dir="$1"
        local total=0
        local file_count=0

        while IFS= read -r -d '' file; do
            if [ -f "$file" ]; then
                lines=$(count_lines "$file")
                if [ "$?" -eq 0 ]; then
                    total=$((total + lines))
                    file_count=$((file_count + 1))
                    if [ "$DETAIL" = true ]; then
                        echo "üìÑ $file: $lines lines"
                    fi
                fi
            fi
        done < <(find "$dir" -type f -print0 2>/dev/null)

        echo "üìä Found $total lines in $file_count file(s)"
    }

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    process_file() {
        if [ -f "$target" ]; then
            lines=$(count_lines "$target")
            if [ "$?" -eq 0 ]; then
                echo "üìÑ $TARGET: $lines lines"
                echo "üìä Found $lines lines in 1 file(s)"
            else
                exit 1
            fi
        else
            echo "Error: '$target' is not a valid file."
            exit 1
        fi
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ç—Ä–æ–∫
    if [ -d "$target" ]; then
        if [ "$recursive" = true ]; then
            process_directory "$target"
        else
            echo "Error: '$target' is a directory. Use -r for recursive counting."
            exit 1
        fi
    elif [ -f "$target" ]; then
        process_file "$target"
    else
        echo "Error: '$target' does not exist or is invalid."
        exit 1
    fi

else
    echo "Usage:"
    echo "  Service control: $0 --service <service_name>"
    echo "  Line counting:   $0 --count-lines <file_or_dir> [-r] [--detail]"
    exit 1
fi
